@import '../icons.json';

// Build Uri
@function svg-uri($svg) {
  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: ceil(str-length($svg) / $slice);

  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    $chunk: str-replace($chunk, '"', "'");
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');
    $chunk: str-replace($chunk, '&', '%26');
    $chunk: str-replace($chunk, '#', '%23');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return #{$encoded};
}

// Replace string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// Builds the icon
@function _buildIcon($icon, $color) {
  $icon: '#{str-replace($icon, 'ICONCOLOREPLACE', $color)}';
  @return svg-uri($icon);
}


@mixin icon(
  $icon-name,
  $color,
  $format
){
  @if $format == linked {
    // Linked svgs for Edge
    @if $color == 'rgb(196,205,213)' {
      background-image: url($path + '/icons/' + $icon-name + '-disabled.svg');
    } @else {
      background-image: url($path + '/icons/' + $icon-name + '.svg');
    }
  } @else {
    // Embedded svgs for all other browsers
    $icon: _buildIcon(map-get($icons, $icon-name), $color);
    background-image: url('data:image/svg+xml;charset=utf8,#{$icon}');
  }
}